(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{322:function(e,v,t){"use strict";t.r(v);var _=t(10),a=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"算法介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法介绍"}},[e._v("#")]),e._v(" 算法介绍")]),e._v(" "),v("p",[e._v("LFU（Least Frequently Used，最不经常使用缓存算法）算法的思想是为了确定最不常用的 key，可以为缓存中的每个 key 维护一个计数器，使用计数最小的 key 就是最不经常使用的缓存算法。当向容器中添加一个新的 Key 时，如果缓存已经达到最大容量时，LFU 会移除访问频率最小的元素，如果最小频率中有多个元素，那么就移除最早添加到容器的 key，这个特性类似 LRU。")]),e._v(" "),v("p",[e._v("LFU 的功能：")]),e._v(" "),v("ul",[v("li",[e._v("set 向 LFU 中添加一个键值对")]),e._v(" "),v("li",[e._v("get 根据键从 LFU 中获取一个值，如果没有则返回空")])]),e._v(" "),v("p",[e._v("LFU 的特性：")]),e._v(" "),v("ul",[v("li",[e._v("LFU 缓存有一个固定大小")]),e._v(" "),v("li",[e._v("所有的操作都是"),v("code",[e._v("O(1)")])]),e._v(" "),v("li",[e._v("支持并发")]),e._v(" "),v("li",[e._v("添加新的 key 在缓存容量满时会移除一个 key")])]),e._v(" "),v("h1",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[e._v("#")]),e._v(" 数据结构")]),e._v(" "),v("p",[e._v("结构设计概览：")]),e._v(" "),v("ul",[v("li",[e._v("索引表：为了能够在"),v("code",[e._v("O(1)")]),e._v("时间获取到一个 key 对应的 value，我们需要对键值对设置一个索引，数据结构采用 Map")]),e._v(" "),v("li",[e._v("frequency 表：为了能够在"),v("code",[e._v("O(1)")]),e._v("时间内查找到对应计数链表，使用 frequency 表作为计数的索引")]),e._v(" "),v("li",[e._v("最小计数表指针：为了能够在"),v("code",[e._v("O(1)")]),e._v("时间内查找到需要移除的键值对，我们维护一个最小计数链表指针，用于快速定位待删除的计数链表")]),e._v(" "),v("li",[e._v("双向链表：为了能够在"),v("code",[e._v("O(1)")]),e._v("时间内删除一个键值对，我们使用链表来管理缓存键值对")]),e._v(" "),v("li",[e._v("为了能够实现 addLast、removeFirst 和 removeLast 操作，我们需要使用双向链表")])]),e._v(" "),v("p",[v("img",{attrs:{src:"http://hunt-cdn.eyescode.top/content/54e9f7ca-a34a-0510-a793-09ed20c79b61.jpg",alt:"LFU数据结构"}})]),e._v(" "),v("h1",{attrs:{id:"算法实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法实现"}},[e._v("#")]),e._v(" 算法实现")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("摘自：")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://developer.aliyun.com/article/854931",target:"_blank",rel:"noopener noreferrer"}},[e._v("LFU缓存算法及Java实现"),v("OutboundLink")],1)])]),e._v(" "),v("p",[e._v("站长略有修改")])])}),[],!1,null,null,null);v.default=a.exports}}]);