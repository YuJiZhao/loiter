(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{341:function(_,v,t){"use strict";t.r(v);var l=t(10),i=Object(l.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"一面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[_._v("#")]),_._v(" 一面")]),_._v(" "),v("p",[_._v('2023-08-16，上来先拷打实习经历，自己的实习经历没复盘好，有些地方讲的很模糊，被质疑："你确定？"')]),_._v(" "),v("p",[_._v("之后就是ez模式了，全八股：")]),_._v(" "),v("ul",[v("li",[_._v("进程线程")]),_._v(" "),v("li",[_._v("url全过程")]),_._v(" "),v("li",[_._v("HTTP/HTTPS")]),_._v(" "),v("li",[_._v("死锁")]),_._v(" "),v("li",[_._v("Java集合类")]),_._v(" "),v("li",[_._v("MySQL语句执行流程")]),_._v(" "),v("li",[_._v("事务")]),_._v(" "),v("li",[_._v("Redis淘汰、过期")]),_._v(" "),v("li",[_._v("设计登录系统")])]),_._v(" "),v("p",[_._v("算法：无序数组找topk")]),_._v(" "),v("h1",{attrs:{id:"二面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[_._v("#")]),_._v(" 二面")]),_._v(" "),v("p",[_._v("2023-08-22")]),_._v(" "),v("ol",[v("li",[_._v("讲认为最满意的一个需求")]),_._v(" "),v("li",[_._v("Redis如何保证可靠性、zset")]),_._v(" "),v("li",[_._v("从用户发起请求，到你的代码执行逻辑，讲一下整个流程（大致就网关、微服务框架那些）")]),_._v(" "),v("li",[_._v("负载均衡怎么做？七层负载、四层负载")]),_._v(" "),v("li",[_._v("RPC框架中，如果一个服务挂掉，如何处理（不会，求大佬指点，现在想想应该是要我讲熔断器设计）")]),_._v(" "),v("li",[_._v("了解Tomcat或者一些微服务框架中线程池一般设置为多大？为什么（不会，叫我蒙并且说说为啥，我就从按照IO密集型的思路分析了一遍")]),_._v(" "),v("li",[_._v("假设Tomcat最大支持200线程，每个请求响应时间20ms，计算理论qps")]),_._v(" "),v("li",[_._v("4核8G服务器，一般无法实现上述理论的最大QPS，你如何去分析？")]),_._v(" "),v("li",[_._v("假设压测某个服务，QPS上不去，失败率在上涨，响应时间也在上涨，CPU不高，怎么分析问题，并且用什么工具定位（懵了，我说的就是下游超时、GC、IO太多、线程切换太大这四点，求大佬指导）")]),_._v(" "),v("li",[_._v("系统可用性2个9什么意思")]),_._v(" "),v("li",[_._v("反问，了解团队业务，细问了面试官和竞品相比的一些优势")])]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("作者：10_+x")]),_._v(" "),v("p",[_._v("链接："),v("a",{attrs:{href:"https://www.nowcoder.com/discuss/523595426050666496",target:"_blank",rel:"noopener noreferrer"}},[_._v("阿里系个人面经（持续更新）"),v("OutboundLink")],1)]),_._v(" "),v("p",[_._v("来源：牛客网")])])}),[],!1,null,null,null);v.default=i.exports}}]);